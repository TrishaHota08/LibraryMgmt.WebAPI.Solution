// <auto-generated />
using System;
using LibraryMgmt.EFCore.DataAccess.LibDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryMgmt.WebAPI.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20230718140235_initialsetup")]
    partial class initialsetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookingStatus = "Available",
                            Price = 23,
                            Title = "The Shining by Stephen King"
                        },
                        new
                        {
                            BookId = 2,
                            BookingStatus = "Available",
                            Price = 100,
                            Title = "The Rise Of Titans"
                        },
                        new
                        {
                            BookId = 3,
                            BookingStatus = "Available",
                            Price = 14,
                            Title = "IT by Stephen King"
                        },
                        new
                        {
                            BookId = 4,
                            BookingStatus = "Available",
                            Price = 63,
                            Title = "The Notebook by Nicholas Sparks"
                        });
                });

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerName = "Mathews Jon",
                            PhoneNumber = "9867542310",
                            email = "mathews.jon@gmail.com"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerName = "Henry Williams",
                            PhoneNumber = "9087564312",
                            email = "williams.hnry@gmail.com"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerName = "Edwards Snow",
                            PhoneNumber = "9967578651",
                            email = "eddy.snow@gmail.com"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerName = "Willy Richard Mark",
                            PhoneNumber = "9876504321",
                            email = "willy.richard@gmail.com"
                        });
                });

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "admin@libraryuae.com",
                            Password = "admin123",
                            StaffName = "Admin",
                            StaffRole = "Admin"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "intern@libraryuae.com",
                            Password = "intern123",
                            StaffName = "Intern",
                            StaffRole = "Intern"
                        },
                        new
                        {
                            StaffId = 3,
                            Email = "librarian@libraryuae.com",
                            Password = "librarian123",
                            StaffName = "Librarian",
                            StaffRole = "Librarian"
                        });
                });

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Order", b =>
                {
                    b.HasOne("LibraryMgmt.EFCore.Domain.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryMgmt.EFCore.Domain.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryMgmt.EFCore.Domain.Models.Staff", "Staff")
                        .WithMany("Orders")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LibraryMgmt.EFCore.Domain.Models.Staff", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
